{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","TodoInfo","todo","className","title","TodoList","todos","map","id","username","preparedTodos","completed","userId","users","find","getMaxId","currentTodos","Math","max","apply","App","useState","todoList","setTodos","userName","setUserName","setTitle","hasTitleError","setTitleError","hasUserError","setUserError","onSubmit","event","preventDefault","todoToAdd","length","value","onChange","target","disabled","type","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e627b60.chunk.js","sourcesContent":["import React from 'react';\n\nexport interface User {\n  id: number,\n  name: string,\n  email: string,\n}\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  <>\n    <span data-cy=\"username\">\n      {user.name}\n    </span>\n    <br />\n    <span data-cy=\"email\">\n      {user.email}\n    </span>\n    <br />\n  </>\n);\n","import React from 'react';\nimport { User, UserInfo } from '../UserInfo/UserInfo';\n\nexport interface Todo {\n  userId: number,\n  id: number,\n  title: string,\n  user?: User | null,\n}\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <p>\n      {todo.user && <UserInfo user={todo.user} />}\n\n      <p className=\"todo-title\">\n        {todo.title}\n      </p>\n    </p>\n  </>\n);\n","import React from 'react';\nimport { Todo, TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <ul>\n    {todos.map(todo => (\n      <li key={todo.id}>\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { Todo } from './components/TodoInfo/TodoInfo';\nimport { TodoList } from './components/TodoList/TodoList';\nimport todos from './api/todos';\nimport users from './api/users';\n\nconst preparedTodos: Todo[] = todos.map(todo => ({\n  ...todo,\n  user: users.find(user => (user.id === todo.userId) || null),\n}));\n\nfunction getMaxId(currentTodos: Todo[]) {\n  const id = currentTodos.map(todo => todo.id);\n\n  return Math.max.apply(null, id);\n}\n\nexport const App = () => {\n  const [todoList, setTodos] = useState(preparedTodos);\n  const [userName, setUserName] = useState('');\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserError, setUserError] = useState(false);\n\n  function onSubmit(event:React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    const todoToAdd: Todo = {\n      userId: todoList[todoList.length - 1].id + 1,\n      id: getMaxId(todoList),\n      title,\n      user: users.find(user => user.name === userName),\n    };\n\n    setTitleError(!title);\n    setUserError(!userName);\n\n    if (!title || !userName) {\n      return;\n    }\n\n    setTodos(currentTodos => [...currentTodos, todoToAdd]);\n    setTitle('');\n    setUserName('');\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"userform\">\n        <form onSubmit={onSubmit}>\n          <div className=\"select\">\n            <select\n              className=\"field field-select\"\n              name=\"userName\"\n              value={userName}\n              onChange={(event) => {\n                setUserError(false);\n                setUserName(event.target.value);\n              }}\n            >\n              <option\n                value=\"\"\n                disabled\n              >\n                Select user\n              </option>\n\n              {users.map(user => (\n                <option\n                  value={user.name}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            <br />\n            {hasUserError && (\n              <span className=\"error\">\n                Please, select a user\n              </span>\n            )}\n          </div>\n\n          <div>\n            <input\n              className=\"field\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={(event) => {\n                setTitleError(false);\n                setTitle(event.target.value);\n              }}\n            />\n            <br />\n            {hasTitleError && (\n              <span className=\"error\">Please, enter a title</span>\n            )}\n          </div>\n\n          <button\n            className=\"button\"\n            type=\"submit\"\n          >\n            Add\n          </button>\n\n        </form>\n      </div>\n\n      <div className=\"todoList\">\n        <TodoList todos={todoList} />\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}